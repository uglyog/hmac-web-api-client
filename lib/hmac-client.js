// Generated by CoffeeScript 1.7.1
(function() {
  var auth, calculateSignature, canonicalRepresentation, date, errorHandler, successHandler;

  date = null;

  auth = null;

  calculateSignature = function(jqXHR, secret, settings) {
    var rep;
    rep = canonicalRepresentation(jqXHR, settings);
    return CryptoJS.HmacSHA256(rep, secret);
  };

  canonicalRepresentation = function(jqXHR, settings) {
    var a, param, params, paramsMap, paramsStr, _ref;
    a = document.createElement("a");
    a.href = settings.url;
    paramsStr = '';
    if (a.search.length > 1) {
      paramsMap = (function() {
        var _i, _len, _ref, _results;
        _ref = a.search.substr(1).split('&');
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          param = _ref[_i];
          _results.push(param.split('='));
        }
        return _results;
      })();
      paramsMap.sort(function(a, b) {
        if (a[0] < b[0]) {
          return -1;
        } else if (a[0] > b[0]) {
          return 1;
        } else {
          return 0;
        }
      });
      params = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = paramsMap.length; _i < _len; _i++) {
          param = paramsMap[_i];
          _results.push(param.join('='));
        }
        return _results;
      })();
      paramsStr = '?' + params.join('&');
    }
    return "GET\ndate:" + settings.headers["X-HMAC-DATE"] + "\nnonce:" + ((_ref = settings.headers["X-HMAC-NONCE"]) != null ? _ref : '') + "\n" + a.pathname + paramsStr;
  };

  successHandler = function(data, textStatus, jqXHR) {
    var prettyData, responseBlock;
    $('.main .status .status-text').text(textStatus + " - " + jqXHR.status).removeClass('bg-danger').addClass('bg-success');
    responseBlock = $('.main .result code');
    prettyData = JSON.stringify(data, null, 2);
    responseBlock.text(prettyData);
    hljs.highlightBlock(responseBlock.get(0));
    return $('.headers tbody').empty().append("<tr><td>X-HMAC-DATE</td><td>" + date + "</td></tr><tr><td>Authorization</td><td>" + auth + "</td></tr>");
  };

  errorHandler = function(jqXHR, textStatus, errorThrown) {
    $('.main .status .status-text').text(textStatus + " - " + jqXHR.status + " " + errorThrown).addClass('bg-danger').removeClass('bg-success');
    $('.main .result .panel-body').text(jqXHR.responseText);
    $('code').removeClass();
    $('code').empty();
    return $('#header-info tbody').empty();
  };

  $('#submit-request').click(function(event) {
    var accessId, secret, url;
    event.preventDefault();
    $('.main .status .status-text').text('').removeClass('bg-success bg-danger');
    $('.main .result .panel-body').text('');
    url = $('#web-api-url').val();
    if (url.match(/\/$/)) {
      url = url.slice(0, -1);
    }
    accessId = $('#access-key-id').val();
    secret = $('#web-api-secrect').val();
    date = new Date().toUTCString();
    return $.ajax({
      url: url,
      success: successHandler,
      dataType: 'json',
      crossDomain: true,
      xhrFields: {
        withCredentials: true
      },
      headers: {
        "X-HMAC-DATE": date
      },
      beforeSend: function(jqXHR, settings) {
        auth = "HMAC " + accessId + " " + (calculateSignature(jqXHR, secret, settings));
        jqXHR.setRequestHeader("Authorization", auth);
        return true;
      }
    }).fail(errorHandler);
  });

}).call(this);
